"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=exports.makeStorage=void 0;function _typeof(a){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}var fs=require("fs"),path=require("path"),default_filenamer=function(){return function(a){return function(b){return path.join(a.storage_dir,b)}}},makeStorage=function(a){return function(b){var c=configureStorage(b);return a=a(c),{setItem:setItem(a),getItem:getItem(a),removeItem:removeItem(a),getAllKeys:getAllKeys(a)}}};exports.makeStorage=makeStorage;var _default=makeStorage(default_filenamer);exports["default"]=_default;var configureStorage=function(a){if("object"!==_typeof(a))throw new Error("options must be an object");if("string"!=typeof a.storage_dir||""===a.storage_dir)throw new Error("storage_dir must be set");return fs.existsSync(a.storage_dir)||fs.mkdirSync(a.storage_dir,{recursive:!0}),a},setItem=function(a){return function(b,c){return console.log("setItem",b,_typeof(c)),new Promise(function(d,e){try{fs.writeFileSync(a(b),c,"utf8"),d()}catch(a){e(a)}})}},getItem=function(a){return function(b){return new Promise(function(c,d){try{var e=fs.readFileSync(a(b),"utf8");c(e)}catch(a){d(a)}})}},removeItem=function(a){return function(b){return new Promise(function(c,d){try{return fs.unlinkSync(a(b))}catch(a){d(a)}})}},getAllKeys=function(a){return function(){return new Promise(function(b,c){try{var d=fs.readFileSync(a(key),"utf8");b(object.keys(JSON.parse(d)))}catch(a){c(a)}})}};